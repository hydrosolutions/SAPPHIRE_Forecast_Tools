name: Test & deploy iEasyHydroForecast

env:
    IMAGE_NAME: mabesa/sapphire-dashboard
    TOOL_NAME_iEasyHydroForecast: iEasyHydroForecast
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint_and_test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set PYTHONPATH
      run: |
        # Adding the iEasyHydroForecast folder to the PYTHONPATH
        echo "PYTHONPATH=${GITHUB_WORKSPACE}/apps/iEasyHydroForecast" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install git+https://github.com/hydrosolutions/ieasyhydro-python-sdk
        pip install -e ./apps/iEasyHydroForecast
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      working-directory: ./apps
      run: |
        python -m unittest discover -s iEasyHydroForecast/tests -p 'test_*.py'


  push_to_Dckerhub:
    needs: lint_and_test
    runs-on: ubuntu-latest
    name: A job to push the Docker image to Dockerhub

    steps:
    # To use this repository's private action, you must check out the
    # repository.
    - name: Checkout
      uses: actions/checkout@v4

    # Generate the image tag name
    - name: Generate the image tag name
      run: |
        echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    # Rename the image
    - name: Rename the image
      run: |
        echo "IMAGE_TAG=$TOOL_NAME_iEasyHydroForecast-$IMAGE_TAG" >> $GITHUB_ENV

    # Run the dockerization & deployment script
    - name: Build Docker image
      run: |
        docker build -t "$IMAGE_NAME:$IMAGE_TAG" ./apps/iEasyHydroForecast

    # Log in to the Docker registry
    - name: Log in to the Docker registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Push the image to Dockerhub
    - name: Push the image to Dockerhub
      run: |
        docker push "$IMAGE_NAME:$IMAGE_TAG"


  #hello_world_job:
    #needs: lint_and_test
    #runs-on: ubuntu-latest
    #name: A job to say hello

    #steps:
    # To use this repository's private action, you must check out the
    # repository.
    #- name: Checkout
    #  uses: actions/checkout@v4

    # Set script permissions
    #- name: Set script permissions
    #  run: |
    #    chmod +x ./apps/iEasyHydroForecast/say_hello.sh

    # Build Docker image
    #- name: Build Docker image
    #  run: |
    #    docker build -t say_hello ./apps/iEasyHydroForecast

    # Run the Docker image
    #- name: Run Docker image
    #  run: |
    #    docker run say_hello Moon

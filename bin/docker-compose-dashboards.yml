# docker compose file for running the sapphire forecast tools
# build: ieasyhydroforecast_data_root_dir=<path> docker-compose -f /path/to/docker-compose.yml build --no-cache
# run: ieasyhydroforecast_data_root_dir=<path> docker-compose -f /path/to/docker-compose.yml up -d
# stop: docker-compose -f /path/to/docker-compose.yml down


services:

  # Deprecating configuration dashboard in favour of direct link to iEH HF
  #config:
  #  image: mabesa/sapphire-configuration:${ieasyhydroforecast_frontend_docker_image_tag:-latest}
  #  build:
  #    context: ../
  #    dockerfile: ./apps/configuration_dashboard/dockerfile
  #  working_dir: /app
  #  environment:
  #    - PYTHONPATH=/app
  #    - ieasyhydroforecast_data_root_dir=${ieasyhydroforecast_data_root_dir}
  #    - SAPPHIRE_OPDEV_ENV=True
  #    - ieasyhydroforecast_env_file_path=${ieasyhydroforecast_env_file_path}
  #  command: ["R", "-e", "setwd('/app'); shiny::runApp('apps/configuration_dashboard/forecast_configuration.R', port = 3647, host = '0.0.0.0', launch.browser=FALSE)"]
  #  ports:
  #    - "80:3647"
  #  volumes:
  #    - ${ieasyhydroforecast_data_ref_dir}/config:${ieasyhydroforecast_container_data_ref_dir}/config
  #    - ${ieasyhydroforecast_data_ref_dir}/GIS:${ieasyhydroforecast_container_data_ref_dir}/GIS
  #  container_name: sapphire-frontend-config
  #  labels:
  #    - com.centurylinklabs.watchtower.enable=true

  pentaddashboard:
    image: mabesa/sapphire-dashboard:${ieasyhydroforecast_frontend_docker_image_tag:-latest}
    build:
      context: ../
      dockerfile: ./apps/forecast_dashboard/Dockerfile
    working_dir: /app/apps/forecast_dashboard
    init: true
    environment:
      - PYTHONPATH=/app
      - ieasyhydroforecast_data_root_dir=${ieasyhydroforecast_data_root_dir}
      - ieasyhydroforecast_container_data_ref_dir=${ieasyhydroforecast_container_data_ref_dir}
      - SAPPHIRE_OPDEV_ENV=True
      - IN_DOCKER_CONTAINER=True
      - ieasyhydroforecast_env_file_path=${ieasyhydroforecast_env_file_path}
      - ieasyhydroforecast_url_pentad=${ieasyhydroforecast_url_pentad}
      - ALLOWED_WEBSOCKET_ORIGINS=${ieasyhydroforecast_url_pentad}
      - sapphire_forecast_horizon=pentad
    command: >
      bash -c "
      ORIGINS_ARGS=$(echo $${ieasyhydroforecast_url_pentad} | sed 's/,/ --allow-websocket-origin=/g' | sed 's/^/--allow-websocket-origin=/') &&
      panel serve
      --address=0.0.0.0
      --port=5006
      $${ORIGINS_ARGS}
      forecast_dashboard.py
      --num-threads=4
      "
    restart: always
    ports:
      - "5006:5006"
    volumes:
      - ${ieasyhydroforecast_data_ref_dir}/config:${ieasyhydroforecast_container_data_ref_dir}/config
      - ${ieasyhydroforecast_data_ref_dir}/intermediate_data:${ieasyhydroforecast_container_data_ref_dir}/intermediate_data
      - ${ieasyhydroforecast_data_ref_dir}/templates:${ieasyhydroforecast_container_data_ref_dir}/templates
      - ${ieasyhydroforecast_data_ref_dir}/reports:${ieasyhydroforecast_container_data_ref_dir}/reports
      - ${ieasyhydroforecast_data_ref_dir}/bin:${ieasyhydroforecast_container_data_ref_dir}/bin
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: sapphire-frontend-forecast-pentad
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5006/pentad_dashboard"]
      interval: 30s
      timeout: 5s
      retries: 3

  decaddashboard:
    image: mabesa/sapphire-dashboard:${ieasyhydroforecast_frontend_docker_image_tag:-latest}
    build:
      context: ../
      dockerfile: ./apps/forecast_dashboard/Dockerfile
    working_dir: /app/apps/forecast_dashboard
    init: true
    environment:
      - PYTHONPATH=/app
      - ieasyhydroforecast_data_root_dir=${ieasyhydroforecast_data_root_dir}
      - ieasyhydroforecast_container_data_ref_dir=${ieasyhydroforecast_container_data_ref_dir}
      - SAPPHIRE_OPDEV_ENV=True
      - IN_DOCKER_CONTAINER=True
      - ieasyhydroforecast_env_file_path=${ieasyhydroforecast_env_file_path}
      - ieasyhydroforecast_url_decad=${ieasyhydroforecast_url_decad}
      - ALLOWED_WEBSOCKET_ORIGINS=${ieasyhydroforecast_url_decad}
      - sapphire_forecast_horizon=decad
    command: >
      bash -c "
      ORIGINS_ARGS=$(echo $${ieasyhydroforecast_url_decad} | sed 's/,/ --allow-websocket-origin=/g' | sed 's/^/--allow-websocket-origin=/') &&
      panel serve
      --address=0.0.0.0
      --port=5007
      $${ORIGINS_ARGS}
      forecast_dashboard.py
      --num-threads=4
      "
    restart: always
    ports:
      - "5007:5007"
    volumes:
      - ${ieasyhydroforecast_data_ref_dir}/config:${ieasyhydroforecast_container_data_ref_dir}/config
      - ${ieasyhydroforecast_data_ref_dir}/intermediate_data:${ieasyhydroforecast_container_data_ref_dir}/intermediate_data
      - ${ieasyhydroforecast_data_ref_dir}/templates:${ieasyhydroforecast_container_data_ref_dir}/templates
      - ${ieasyhydroforecast_data_ref_dir}/reports:${ieasyhydroforecast_container_data_ref_dir}/reports
      - ${ieasyhydroforecast_data_ref_dir}/bin:${ieasyhydroforecast_container_data_ref_dir}/bin
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: sapphire-frontend-forecast-decad
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5007/decad_dashboard"]
      interval: 30s
      timeout: 5s
      retries: 3

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    command: --interval 30 --label-enable --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SAPPHIRE_PIPELINE_SENDER_EMAIL}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${SAPPHIRE_PIPELINE_EMAIL_RECIPIENTS}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SAPPHIRE_PIPELINE_SMTP_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SAPPHIRE_PIPELINE_SMTP_PORT}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SAPPHIRE_PIPELINE_SMTP_USERNAME}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SAPPHIRE_PIPELINE_SMTP_PASSWORD}








# docker compose file for running the sapphire forecast tools
# build: ieasyhydroforecast_data_root_dir=<path> docker-compose -f /path/to/docker-compose.yml build --no-cache
# run: ieasyhydroforecast_data_root_dir=<path> docker-compose -f /path/to/docker-compose.yml up -d
# stop: docker-compose -f /path/to/docker-compose.yml down

services:

  luigid:
    build:
      context: ../
      dockerfile: ./apps/pipeline/Dockerfile
    ports:
      - "8082:8082"
    command: luigid
    container_name: sapphire-backend-luigid

  pipeline:
    depends_on:
      - luigid
    build:
      context: ../
      dockerfile: ./apps/pipeline/Dockerfile
      args:
        TAG: ${ieasyhydroforecast_backend_docker_image_tag:-latest}
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - ieasyhydroforecast_data_root_dir=${ieasyhydroforecast_data_root_dir}
    command: ['luigi', '--module', 'apps.pipeline.pipeline_docker', 'RunWorkflow']  # If run without luigid, '--local-scheduler']
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Mount docker socket
      - ../../sensitive_data_forecast_tools/config:/sensitive_data_forecast_tools/config
      - ../../sensitive_data_forecast_tools/daily_runoff:/sensitive_data_forecast_tools/daily_runoff
      - ../../sensitive_data_forecast_tools/intermediate_data:/sensitive_data_forecast_tools/intermediate_data
    container_name: sapphire-backend-pipeline





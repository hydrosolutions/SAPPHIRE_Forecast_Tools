library(here)
library(jsonlite)
# 1 Configuration
# Check if this script is run from within a docker container.
# We do this by checking if an environment variable set by the Dockerfile is
# present or not.
if (Sys.getenv("IN_DOCKER_CONTAINER")=="") {
print("Running from local machine")
# Environment variable IN_DOCKER_CONTAINER is not set. Run from local machine
# This code assumes that forecast_configuration has been opened in
# apps/configuration_dashboard for development
setwd(here())
setwd("apps/conceptual_model")
print(getwd())
if (Sys.getenv("SAPPHIRE_OPDEV_ENV")=="True") {
if (!file.exists("../../../sensitive_data_forecast_tools/config/.env_develop_kghm")) {
stop("File ../../../sensitive_data_forecast_tools/config/.env_develop_kghm not found. ")
}
readRenviron("../../../sensitive_data_forecast_tools/config/.env_develop_kghm")
} else {
# Test if the file .env_develop exists.
if (!file.exists("../config/.env_develop")) {
stop("File ../config/.env_develop not found. ")
}
readRenviron("../config/.env_develop")
}
} else {
print("Running from docker container")
# Environment variable IN_DOCKER_CONTAINER is set. Run from docker container
setwd("/app")
print(getwd())
if (Sys.getenv("SAPPHIRE_OPDEV_ENV")=="True") {
if (!file.exists("../sensitive_data_forecast_tools/config/.env_develop_kghm")) {
stop("File ../sensitive_data_forecast_tools/config/.env_develop_kghm not found. ")
}
readRenviron("../sensitive_data_forecast_tools/config/.env_develop_kghm")
} else {
# Test if the file .env exists.
if (!file.exists("apps/config/.env")) {
stop("File apps/config/.env not found. ")
}
readRenviron("apps/config/.env")
}
}
print(Sys.getenv("ieasyhydroforecast_PATH_TO_BASININFO"))
print(Sys.getenv("ieasyhydroforecast_PATH_TO_BASININFO"))
library(here)
library(jsonlite)
# 1 Configuration
# Check if this script is run from within a docker container.
# We do this by checking if an environment variable set by the Dockerfile is
# present or not.
if (Sys.getenv("IN_DOCKER_CONTAINER")=="") {
print("Running from local machine")
# Environment variable IN_DOCKER_CONTAINER is not set. Run from local machine
# This code assumes that forecast_configuration has been opened in
# apps/configuration_dashboard for development
setwd(here())
setwd("apps/conceptual_model")
print(getwd())
if (Sys.getenv("SAPPHIRE_OPDEV_ENV")=="True") {
if (!file.exists("../../../sensitive_data_forecast_tools/config/.env_develop_kghm")) {
stop("File ../../../sensitive_data_forecast_tools/config/.env_develop_kghm not found. ")
}
readRenviron("../../../sensitive_data_forecast_tools/config/.env_develop_kghm")
} else {
# Test if the file .env_develop exists.
if (!file.exists("../config/.env_develop")) {
stop("File ../config/.env_develop not found. ")
}
readRenviron("../config/.env_develop")
}
} else {
print("Running from docker container")
# Environment variable IN_DOCKER_CONTAINER is set. Run from docker container
setwd("/app")
print(getwd())
if (Sys.getenv("SAPPHIRE_OPDEV_ENV")=="True") {
if (!file.exists("../sensitive_data_forecast_tools/config/.env_develop_kghm")) {
stop("File ../sensitive_data_forecast_tools/config/.env_develop_kghm not found. ")
}
readRenviron("../sensitive_data_forecast_tools/config/.env_develop_kghm")
} else {
# Test if the file .env exists.
if (!file.exists("apps/config/.env")) {
stop("File apps/config/.env not found. ")
}
readRenviron("apps/config/.env")
}
}
print(Sys.getenv("ieasyhydroforecast_PATH_TO_BASININFO"))
library(here)
library(jsonlite)
# 1 Configuration
# Check if this script is run from within a docker container.
# We do this by checking if an environment variable set by the Dockerfile is
# present or not.
if (Sys.getenv("IN_DOCKER_CONTAINER")=="") {
print("Running from local machine")
# Environment variable IN_DOCKER_CONTAINER is not set. Run from local machine
# This code assumes that forecast_configuration has been opened in
# apps/configuration_dashboard for development
setwd(here())
# setwd("apps/conceptual_model")
print(getwd())
if (Sys.getenv("SAPPHIRE_OPDEV_ENV")=="True") {
if (!file.exists("../../../sensitive_data_forecast_tools/config/.env_develop_kghm")) {
stop("File ../../../sensitive_data_forecast_tools/config/.env_develop_kghm not found. ")
}
readRenviron("../../../sensitive_data_forecast_tools/config/.env_develop_kghm")
} else {
# Test if the file .env_develop exists.
if (!file.exists("../config/.env_develop")) {
stop("File ../config/.env_develop not found. ")
}
readRenviron("../config/.env_develop")
}
} else {
print("Running from docker container")
# Environment variable IN_DOCKER_CONTAINER is set. Run from docker container
setwd("/app")
print(getwd())
if (Sys.getenv("SAPPHIRE_OPDEV_ENV")=="True") {
if (!file.exists("../sensitive_data_forecast_tools/config/.env_develop_kghm")) {
stop("File ../sensitive_data_forecast_tools/config/.env_develop_kghm not found. ")
}
readRenviron("../sensitive_data_forecast_tools/config/.env_develop_kghm")
} else {
# Test if the file .env exists.
if (!file.exists("apps/config/.env")) {
stop("File apps/config/.env not found. ")
}
readRenviron("apps/config/.env")
}
}
print(Sys.getenv("ieasyhydroforecast_PATH_TO_BASININFO"))
##################################################################
# Have to be in folder: cd /Users/adrian/Documents/GitHub/SAPPHIRE_Forecast_Tools/apps/conceptual_model
# run with: SAPPHIRE_OPDEV_ENV=True Rscript run_operation_forecasting_CM.R
# env file is in: /data/sensitive_data_forecast_tools/config/.env_develop_kghm
# .json file is in:
##################################################################
# 0 Library and Function ####
library(devtools, quietly = TRUE)
# devtools::install_github("hydrosolutions/airGR_GM")
# devtools::install_github("hydrosolutions/airgrdatassim")
library(airGR, quietly = TRUE)
library(airGRdatassim, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(usethis, quietly = TRUE)
source("functions/functions_operational.R")
source("functions/functions_plot.R")
source("functions/functions_hindcast.R")
################### CHANGE ###################
# Code <- 15194
forecast_date <- as.Date("2024-07-31") # change this when DG is running again to today()
config <- fromJSON("ieasyhydroforecast_JSON_FILE")
help(geom_point)
help(geom_line)

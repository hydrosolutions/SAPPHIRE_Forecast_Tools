# .env
# Access to iEasyHydro Database & configuration of file and folder paths for the
# SAPPHIRE Forecast Tools.

# Configuration of iEasyHydro Pyton SDK
# Note that host.docker.internal is used on Mac and Windows to access the host
# machine from within the Docker container. On Linux, use the IP address of the
# host machine instead (e.g. 178.15.0.1). You will have to make sure port that
# port 9000 is open.
# Note further that you will require to have a user account on the iEasyHydro
# platform if you wish to use these software tools to supplement iEasyHydro
# for operational hydrological forecasting. You can request access at
# https://ieasyhydro.org.

# Locally running the linear regression app on Mac, outside a docker container
IEASYHYDRO_HOST=http://localhost:9000

# Running the app in Docker or building image on Windows
#IEASYHYDRO_HOST=http://host.docker.internal:9000
IEASYHYDRO_USERNAME=<user_name>
IEASYHYDRO_PASSWORD=<password>
ORGANIZATION_ID=1

# Configuration of I/O
## Path to station and output configuration files
# For deployment in Docker, in .env, the path to config is relative to
# pentad_forecast_tools ./config
# For running teh dashboard locally, in .env_develop, the path to config is
# relative to the dashboard folder ../config
ieasyforecast_configuration_path=../config
ieasyforecast_config_file_all_stations=config_all_stations_library.json
ieasyforecast_config_file_station_selection=config_station_selection.json
ieasyforecast_config_file_output=config_output.json

## Path to output data files.
# These are intermediate results produced by the linreg tool and used by the
# forecast dashboard.
ieasyforecast_intermediate_data_path=../internal_data
ieasyforecast_hydrograph_day_file=hydrograph_day.csv
ieasyforecast_hydrograph_pentad_file=hydrograph_pentad.csv
ieasyforecast_results_file=forecasts_pentad.csv

## Configuration of iEasyReports
# iEasyReports is a python package used to generate the forecast bulletins.
# It is available at github.com/hydrosolutions/iEasyReports. Its input and
# output files are configured here.
# Forecast bulletins (ieasyforecast_bulletin_file_name) are always written, the
# forecast sheets (ieasyforecast_sheet_file_name) are only written if the
# write_excel parameter in the output configuration file is set to True. This
# is done by the forecast configuration dashboard.
# Path where the templates fore the forecast bulletins are stored
ieasyreports_templates_directory_path=../../data/templates
ieasyforecast_template_pentad_bulletin_file=pentad_forecast_bulletin_template.xlsx
ieasyforecast_template_pentad_sheet_file=short_term_trad_sheet_template.xlsx
# Path where the forecast bulletins are written to in operational mode
ieasyreports_report_output_path=../../data/reports
ieasyforecast_bulletin_file_name=pentadal_forecast_bulletin.xlsx
ieasyforecast_sheet_file_name=pentadal_forecast_sheet.xlsx

# Configuration of the assets for the station selection/configuration dashboard
ieasyforecast_gis_directory_path=../../data/GIS
ieasyforecast_country_borders_file_name=gadm41_CHE_shp/gadm41_CHE_1.shp

# Paths of files with daily discharge data
# Not all daily data is currently in the iEasyHydro Database. Intermediately, the
# data is stored in Excel files. The paths to these files are configured here.
# Note that the excel file names must start with the station code, followed by
# an underscore and then any name. The format of the excel files is one sheet
# per year with dates in the first column and discharge values in m3/s in the
# second column.
ieasyforecast_daily_discharge_path=../../data/daily_runoff

# Path for localization of forecast dashboard
# Here you can switch between the available languages when running the forecast
# dashboard locally. For deployment choose one language.
ieasyforecast_locale_dir=../config/locale
# Set the locale for the dashboard. Available locales are ru_KG and en_CH.
ieasyforecast_locale=en_CH #ru_KG

# Configuration of error and message logging.
log_file=./forecast_logs.txt
log_level=DEBUG

# Configuration used during the development of the forecast tools
# In case, the forecast method is not yet tested for multiple stations, you can
# restrict the stations codes. Put these stations in the following file (same
# format as the config_station_selection.json file).
ieasyforecast_restrict_stations_file=../config/config_development_restrict_station_selection.json
